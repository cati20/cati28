{"ast":null,"code":"var _jsxFileName = \"/root/react-apps/back_end/be-youtiful/src/components/routing/PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const authContext = useContext(AuthContext);\n  const {\n    isAuthenticated,\n    loading\n  } = authContext;\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated && !loading ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }) : React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/root/react-apps/back_end/be-youtiful/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","Component","rest","authContext","isAuthenticated","loading","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAoC;AACrD,QAAMC,WAAW,GAAGR,UAAU,CAACG,WAAD,CAA9B;AAEA,QAAM;AAACM,IAAAA,eAAD;AAAmBC,IAAAA;AAAnB,MAA8BF,WAApC;AAEA,SACI,oBAAC,KAAD,oBAAYD,IAAZ;AAAkB,IAAA,MAAM,EAAEI,KAAK,IAAI,CAACF,eAAD,IAAoB,CAACC,OAArB,GAC/B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD+B,GAG/B,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AASH,CAdD;;AAgBA,eAAeP,YAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = ({component: Component, ...rest}) =>{\n    const authContext = useContext(AuthContext);\n\n    const {isAuthenticated , loading} = authContext\n\n    return(\n        <Route  {...rest} render={props => !isAuthenticated && !loading ? (\n            <Redirect to='/' />\n        ) : (\n            <Component {...props} />\n        )} />\n\n        \n    )\n}\n\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}