{"ast":null,"code":"import { ADD_BOOKING, DELETE_BOOKING, SET_CURRENT, CLEAR_CURRENT, UPDATE_BOOKING, FILTER_BOOKING, CLEAR_FILTER, BOOKING_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_BOOKING:\n      return { ...state,\n        bookings: [...state.bookings, action.payload]\n      };\n\n    case UPDATE_BOOKING:\n      return { ...state,\n        bookings: state.bookings.map(booking => booking.id === action.payload.id ? action.payload : booking)\n      };\n\n    case DELETE_BOOKING:\n      return { ...state,\n        bookings: state.bookings.filter(booking => booking.id !== action.payload)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_BOOKING:\n      return { ...state,\n        filtered: state.bookings.filter(booking => {\n          const regex = new RegExp(`${action.payload}, 'gi`);\n          return booking.name.match(regex) || booking.cellphone.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case BOOKING_ERROR:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/root/react-apps/back_end/be-youtiful/src/context/booking/bookingReducer.js"],"names":["ADD_BOOKING","DELETE_BOOKING","SET_CURRENT","CLEAR_CURRENT","UPDATE_BOOKING","FILTER_BOOKING","CLEAR_FILTER","BOOKING_ERROR","state","action","type","bookings","payload","map","booking","id","filter","current","filtered","regex","RegExp","name","match","cellphone"],"mappings":"AAAA,SACIA,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,YAPJ,EAQIC,aARJ,QASO,UATP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAC7B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,WAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFP,OAAP;;AAIJ,SAAKR,cAAL;AACI,aAAM,EACF,GAAGI,KADD;AAEFG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,GAAf,CAAmBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAP,CAAeG,EAA9B,GACxCN,MAAM,CAACG,OADiC,GACxBE,OADN;AAFR,OAAN;;AAMJ,SAAKb,cAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeK,MAAf,CAAsBF,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAvD;AAFP,OAAP;;AAIJ,SAAKV,WAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHS,QAAAA,OAAO,EAAER,MAAM,CAACG;AAFb,OAAP;;AAIH,SAAKT,aAAL;AACG,aAAO,EACH,GAAGK,KADA;AAEHS,QAAAA,OAAO,EAAC;AAFL,OAAP;;AAIJ,SAAKZ,cAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHU,QAAAA,QAAQ,EAAEV,KAAK,CAACG,QAAN,CAAeK,MAAf,CAAsBF,OAAO,IAAG;AACtC,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEX,MAAM,CAACG,OAAQ,OAA7B,CAAd;AACA,iBAAOE,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,SAAR,CAAkBD,KAAlB,CAAwBH,KAAxB,CAApC;AACH,SAHS;AAFP,OAAP;;AAOJ,SAAKb,YAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHU,QAAAA,QAAQ,EAAC;AAFN,OAAP;;AAIJ,SAAKX,aAAL;AACI,aAAO,EACH,GAAGC;AADA,OAAP;;AAIJ;AACI,aAAOA,KAAP;AA/CR;AAiDH,CAlDD","sourcesContent":["import {\n    ADD_BOOKING,\n    DELETE_BOOKING,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_BOOKING,\n    FILTER_BOOKING,\n    CLEAR_FILTER,\n    BOOKING_ERROR\n} from '../types'\n\n\nexport default (state, action) =>{\n    switch(action.type){\n        case ADD_BOOKING:\n            return {\n                ...state,\n                bookings: [...state.bookings, action.payload]\n            };\n        case UPDATE_BOOKING:\n            return{\n                ...state,\n                bookings: state.bookings.map(booking => booking.id === action.payload.id? \n                action.payload: booking   \n                 )\n            };    \n        case DELETE_BOOKING:\n            return {\n                ...state,\n                bookings: state.bookings.filter(booking => booking.id !== action.payload)\n            };\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            };\n         case CLEAR_CURRENT:\n            return {\n                ...state,\n                current:null\n            };    \n        case FILTER_BOOKING:\n            return {\n                ...state,\n                filtered: state.bookings.filter(booking =>{\n                    const regex = new RegExp(`${action.payload}, 'gi`);\n                    return booking.name.match(regex) || booking.cellphone.match(regex)\n                })\n            }\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered:null\n            }    \n        case BOOKING_ERROR:\n            return {\n                ...state,\n                \n            }    \n        default:\n            return state;    \n    }\n}"]},"metadata":{},"sourceType":"module"}