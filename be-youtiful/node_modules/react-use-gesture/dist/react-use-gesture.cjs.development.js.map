{"version":3,"file":"react-use-gesture.cjs.development.js","sources":["../src/utils/math.ts","../src/utils/utils.ts","../src/utils/state.ts","../src/utils/event.ts","../src/Controller.ts","../src/hooks/useRecognizers.ts","../src/recognizers/Recognizer.ts","../src/recognizers/CoordinatesRecognizer.ts","../src/recognizers/DragRecognizer.ts","../src/utils/config.ts","../src/hooks/useDrag.ts","../src/recognizers/DistanceAngleRecognizer.ts","../src/recognizers/PinchRecognizer.ts","../src/hooks/usePinch.ts","../src/recognizers/WheelRecognizer.ts","../src/hooks/useWheel.ts","../src/recognizers/MoveRecognizer.ts","../src/hooks/useMove.ts","../src/hooks/useHover.ts","../src/recognizers/ScrollRecognizer.ts","../src/hooks/useScroll.ts","../src/hooks/useGesture.ts"],"sourcesContent":["// vector add\nexport function addV<T extends number[]>(v1: T, v2: T): T {\n  return v1.map((v, i) => v + v2[i]) as T\n}\n\n// vector substract\nexport function subV<T extends number[]>(v1: T, v2: T): T {\n  return v1.map((v, i) => v - v2[i]) as T\n}\n/**\n * Calculates velocity\n * @param delta the difference between current and previous vectors\n * @param delta_t the time offset\n * @param len the length of the delta vector\n * @returns velocity\n */\nexport function calculateVelocity(delta: number[], delta_t: number, len: number): number {\n  len = len || Math.hypot(...delta)\n  return delta_t ? len / delta_t : 0\n}\n\n/**\n * Calculates velocities vector\n * @template T the expected vector type\n * @param delta the difference between current and previous vectors\n * @param delta_t the time offset\n * @returns velocities vector\n */\nexport function calculateVelocities<T extends number[]>(delta: T, delta_t: number): T {\n  return (delta_t ? delta.map(v => v / delta_t) : Array(delta.length).fill(0)) as T\n}\n\n/**\n * Calculates distance\n * @param movement the difference between current and initial vectors\n * @returns distance\n */\nexport function calculateDistance(movement: number[]): number {\n  return Math.hypot(...movement)\n}\n\n/**\n * Calculates direction\n * @template T the expected vector type\n * @param delta\n * @param len\n * @returns direction\n */\nexport function calculateDirection<T extends number[]>(delta: T, len?: number): T {\n  len = len || Math.hypot(...delta) || 1\n  return delta.map(v => v / len!) as T\n}\n\ninterface Kinematics<T extends number[]> {\n  velocities: T\n  velocity: number\n  distance: number\n  direction: T\n}\n\n/**\n * Calculates all kinematics\n * @template T the expected vector type\n * @param movement the difference between current and initial vectors\n * @param delta the difference between current and previous vectors\n * @param delta_t the time difference between current and previous timestamps\n * @returns all kinematics\n */\nexport function calculateAllKinematics<T extends number[]>(movement: T, delta: T, delta_t: number): Kinematics<T> {\n  const len = Math.hypot(...delta)\n\n  return {\n    velocities: calculateVelocities(delta, delta_t),\n    velocity: calculateVelocity(delta, delta_t, len),\n    distance: calculateDistance(movement),\n    direction: calculateDirection(delta, len),\n  }\n}\n\nexport function getIntentional(movement: number, threshold: number): number | false {\n  const abs = Math.abs(movement)\n  return abs >= threshold ? Math.sign(movement) * threshold : false\n}\n\nfunction minMax(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(value, max))\n}\n\n// Based on @aholachek ;)\n// https://twitter.com/chpwn/status/285540192096497664\n// iOS constant = 0.55\n\n// https://medium.com/@nathangitter/building-fluid-interfaces-ios-swift-9732bb934bf5\nfunction rubberband2(distance: number, constant: number) {\n  // default constant from the article is 0.7\n  return Math.pow(distance, constant * 5)\n}\n\nfunction rubberband(distance: number, dimension: number, constant: number) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return rubberband2(distance, constant)\n  return (distance * dimension * constant) / (dimension + constant * distance)\n}\n\nexport function rubberbandIfOutOfBounds(position: number, min: number, max: number, constant = 0.15) {\n  if (constant === 0) return minMax(position, min, max)\n\n  if (position < min) {\n    return -rubberband(min - position, max - min, constant) + min\n  }\n  if (position > max) {\n    return rubberband(position - max, max - min, constant) + max\n  }\n  return position\n}\n","import { Fn, Vector2 } from '../types'\n\n// blank function\nexport function noop() {}\n// returns a function that chains all functions given as parameters\nexport const chainFns = (...fns: Fn[]): Fn => (...args: any[]) => fns.forEach(fn => fn(...args))\n\nexport const def = {\n  array: <T>(value: T | T[]): T[] => (Array.isArray(value) ? value : [value, value]),\n  withDefault: <T>(value: T | undefined, defaultIfUndefined: T): T => (value !== void 0 ? value : defaultIfUndefined),\n}\n\nexport function matchKeysFromObject<T extends object, K extends object>(obj: T, matchingObject: K): Partial<T> {\n  const o: Partial<T> = {}\n  Object.entries(obj).forEach(\n    ([key, value]) => (value !== void 0 || key in matchingObject) && (o[key as keyof T] = value)\n  )\n  return o\n}\n\nexport function valueFn(v: Vector2 | (() => Vector2)) {\n  return typeof v === 'function' ? v() : v\n}\n","import { noop } from './utils'\nimport { CommonGestureState, Coordinates, State, DistanceAngle, Vector2 } from '../types'\n\nexport function getInitialState(): State {\n  // common initial state for all gestures\n  const initialCommon: CommonGestureState = {\n    _active: false,\n    _blocked: false,\n    _intentional: [false, false],\n    _movement: [0, 0],\n    _initial: [0, 0],\n    event: undefined,\n    // currentTarget: undefined,\n    // pointerId: undefined,\n    values: [0, 0],\n    velocities: [0, 0],\n    delta: [0, 0],\n    movement: [0, 0],\n    offset: [0, 0],\n    lastOffset: [0, 0],\n    direction: [0, 0],\n    initial: [0, 0],\n    previous: [0, 0],\n    first: false,\n    last: false,\n    active: false,\n    timeStamp: 0,\n    startTime: 0,\n    elapsedTime: 0,\n    cancel: noop,\n    canceled: false,\n    memo: undefined,\n    args: undefined,\n  }\n\n  // initial state for coordinates-based gestures\n  const initialCoordinates: Coordinates = {\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  }\n\n  // initial state for distance and angle-based gestures (pinch)\n  const initialDistanceAngle: DistanceAngle = {\n    da: [0, 0] as Vector2,\n    vdva: [0, 0] as Vector2,\n    origin: undefined,\n    turns: 0,\n  }\n\n  // initial state object (used by the gesture controller)\n  return {\n    shared: {\n      hovering: false,\n      scrolling: false,\n      wheeling: false,\n      dragging: false,\n      moving: false,\n      pinching: false,\n      touches: 0,\n      buttons: 0,\n      down: false,\n      shiftKey: false,\n      altKey: false,\n      metaKey: false,\n      ctrlKey: false,\n    },\n    drag: {\n      ...initialCommon,\n      ...initialCoordinates,\n      _isTap: true,\n      _delayedEvent: false,\n      tap: false,\n      swipe: [0, 0],\n    },\n    pinch: { ...initialCommon, ...initialDistanceAngle },\n    wheel: { ...initialCommon, ...initialCoordinates },\n    move: { ...initialCommon, ...initialCoordinates },\n    scroll: { ...initialCommon, ...initialCoordinates },\n  }\n}\n","import { Fn, EventOptions, UseGestureEvent, Vector2, WebKitGestureEvent } from '../types'\n\nconst isBrowser = typeof window !== 'undefined'\n\nexport const supportsTouchEvents = () => isBrowser && window.ontouchstart === null\n\nconst setListeners = (add: boolean) => (el: EventTarget, listeners: [string, Fn][], options: EventOptions): void => {\n  const action = add ? 'addEventListener' : 'removeEventListener'\n  listeners.forEach(([eventName, fn]) => el[action](eventName, fn, options))\n}\n\n/**\n * Whether the browser supports GestureEvent (ie Safari)\n * @returns true if the browser supports gesture event\n */\nexport function gestureEventSupported(): boolean {\n  try {\n    // TODO [TS] possibly find GestureEvent definitions?\n    // @ts-ignore: no type definitions for webkit GestureEvents\n    return 'constructor' in GestureEvent\n  } catch (e) {\n    return false\n  }\n}\n\nexport const addListeners = setListeners(true)\nexport const removeListeners = setListeners(false)\n\ninterface ModifierKeys {\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  ctrlKey: boolean\n}\n\n/**\n * Gets modifier keys from event\n * @param event\n * @returns modifier keys\n */\nexport function getModifierKeys(event: UseGestureEvent): ModifierKeys {\n  const { shiftKey, altKey, metaKey, ctrlKey } = event\n  return { shiftKey, altKey, metaKey, ctrlKey }\n}\n\nfunction getTouchEvents(event: UseGestureEvent) {\n  if ('touches' in event) {\n    const { touches, changedTouches } = event\n    return touches.length > 0 ? touches : changedTouches\n  }\n  return null\n}\n\nexport function getGenericEventData(event: React.MouseEvent | React.TouchEvent | React.PointerEvent) {\n  const buttons = 'buttons' in event ? event.buttons : 0\n  const touchEvents = getTouchEvents(event)\n  const touches = (touchEvents && touchEvents.length) || 0\n  const down = touches > 0 || buttons > 0\n  return { touches, down, buttons, ...getModifierKeys(event) }\n}\n\ntype Values = { values: Vector2 }\n\n/**\n * Gets scroll event values\n * @param event\n * @returns scroll event values\n */\nexport function getScrollEventValues(event: UseGestureEvent): Values {\n  // If the currentTarget is the window then we return the scrollX/Y position.\n  // If not (ie the currentTarget is a DOM element), then we return scrollLeft/Top\n  const { scrollX, scrollY, scrollLeft, scrollTop } = event.currentTarget as Element & Window\n  return { values: [scrollX || scrollLeft || 0, scrollY || scrollTop || 0] }\n}\n\n/**\n * Gets wheel event values.\n * @param event\n * @returns wheel event values\n */\nexport function getWheelEventValues(event: UseGestureEvent<React.WheelEvent>): Values {\n  const { deltaX, deltaY } = event\n  //TODO implement polyfill ?\n  // https://developer.mozilla.org/en-US/docs/Web/Events/wheel#Polyfill\n  return { values: [deltaX, deltaY] }\n}\n\n/**\n * Gets pointer event values.\n * @param event\n * @returns pointer event values\n */\nexport function getPointerEventValues(event: React.MouseEvent | React.TouchEvent | React.PointerEvent): Values {\n  const touchEvents = getTouchEvents(event)\n  const { clientX, clientY } = touchEvents ? touchEvents[0] : (event as React.PointerEvent)\n  return { values: [clientX, clientY] }\n}\n\nconst WEBKIT_DISTANCE_SCALE_FACTOR = 260\n\n/**\n * Gets webkit gesture event values.\n * @param event\n * @returns webkit gesture event values\n */\nexport function getWebkitGestureEventValues(event: WebKitGestureEvent): Values {\n  return { values: [event.scale * WEBKIT_DISTANCE_SCALE_FACTOR, event.rotation] as Vector2 }\n}\n\n/**\n * Gets two touches event data\n * @param event\n * @returns two touches event data\n */\nexport function getTwoTouchesEventData(event: React.TouchEvent) {\n  const { touches } = event\n  const dx = touches[1].clientX - touches[0].clientX\n  const dy = touches[1].clientY - touches[0].clientY\n\n  const values: Vector2 = [Math.hypot(dx, dy), -(Math.atan2(dx, dy) * 180) / Math.PI]\n  const origin: Vector2 = [(touches[1].clientX + touches[0].clientX) / 2, (touches[1].clientY + touches[0].clientY) / 2]\n\n  return { values, origin }\n}\n","import {\n  StateKey,\n  State,\n  Fn,\n  ReactEventHandlerKey,\n  ReactEventHandlers,\n  InternalConfig,\n  InternalHandlers,\n} from './types'\nimport { getInitialState } from './utils/state'\nimport { addListeners, removeListeners } from './utils/event'\nimport { chainFns } from './utils/utils'\n\ntype GestureTimeouts = Partial<{ [stateKey in StateKey]: number }>\ntype WindowListeners = Partial<{ [stateKey in StateKey]: [string, Fn][] }>\ntype Bindings = Partial<{ [eventName in ReactEventHandlerKey]: Fn[] }>\n\n/**\n * The controller will keep track of the state for all gestures and also keep\n * track of timeouts, and window listeners.\n *\n * @template BinderType the type the bind function should return\n */\nexport default class Controller {\n  public config!: InternalConfig\n  public handlers!: Partial<InternalHandlers>\n  public state: State = getInitialState() // state for all gestures\n  public timeouts: GestureTimeouts = {} // keeping track of timeouts for debounced gestures (such as move, scroll, wheel)\n  private domListeners: [string, Fn][] = [] // when config.domTarget is set, we attach events directly to the dom\n  private windowListeners: WindowListeners = {} // keeps track of window listeners added by gestures (drag only at the moment)\n  private bindings: Bindings = {} // an object holding the handlers associated to the gestures\n\n  /**\n   * Function ran on component unmount: cleans timeouts and removes dom listeners set by the bind function.\n   */\n  public clean = (): void => {\n    this.resetBindings()\n    Object.values(this.timeouts).forEach(clearTimeout)\n    Object.keys(this.windowListeners).forEach(stateKey => this.removeWindowListeners(stateKey as StateKey))\n  }\n\n  /**\n   * Function run every time the bind function is run (ie on every render).\n   * Resets the binding object and remove dom listeners attached to config.domTarget\n   */\n  public resetBindings = (): void => {\n    this.bindings = {}\n    const domTarget = this.getDomTarget()\n    if (domTarget) {\n      removeListeners(domTarget, this.domListeners, this.config.eventOptions)\n      this.domListeners = []\n    }\n  }\n\n  /**\n   * Returns the domTarget element and parses a ref if needed.\n   */\n  private getDomTarget = (): EventTarget | null | undefined => {\n    const { domTarget } = this.config\n    return domTarget && 'current' in domTarget ? domTarget.current : domTarget\n  }\n\n  /**\n   * Commodity function to let recognizers simply add listeners to config.window.\n   */\n  public addWindowListeners = (stateKey: StateKey, listeners: [string, Fn][]): void => {\n    if (!this.config.window) return\n    // we use this.windowListeners to keep track of the listeners we add\n    this.windowListeners[stateKey] = listeners\n    addListeners(this.config.window, listeners, this.config.eventOptions)\n  }\n\n  /**\n   * Commodity function to let recognizers simply remove listeners to config.window.\n   */\n  public removeWindowListeners = (stateKey: StateKey): void => {\n    if (!this.config.window) return\n    const listeners = this.windowListeners[stateKey]\n    if (listeners) {\n      removeListeners(this.config.window, listeners, this.config.eventOptions)\n      delete this.windowListeners[stateKey]\n    }\n  }\n\n  /**\n   * When config.domTarget is set, this function will add dom listeners to it\n   */\n  public addDomTargetListeners = (target: EventTarget): void => {\n    /** We iterate on the entries of this.binding for each event, then we chain\n     * the array of functions mapped to it and push them to this.domListeners\n     */\n    Object.entries(this.bindings).forEach(([event, fns]) => {\n      this.domListeners.push([event.substr(2).toLowerCase(), chainFns(...(fns as Fn[]))])\n    })\n\n    addListeners(target, this.domListeners, this.config.eventOptions)\n  }\n\n  /**\n   * this.bindings is an object which keys match ReactEventHandlerKeys.\n   * Since a recognizer might want to bind a handler function to an event key already used by a previously\n   * added recognizer, we need to make sure that each event key is an array of all the functions mapped for\n   * that key.\n   */\n  public addBindings = (eventNames: ReactEventHandlerKey | ReactEventHandlerKey[], fn: Fn): void => {\n    const eventNamesArray = !Array.isArray(eventNames) ? [eventNames] : eventNames\n    eventNamesArray.forEach(eventName => {\n      if (this.bindings[eventName]) this.bindings[eventName]!.push(fn)\n      else this.bindings[eventName] = [fn]\n    })\n  }\n\n  /**\n   * getBindings will return an object that will be bound by users\n   * to the react component they want to interact with.\n   */\n  public getBindings = (): ReactEventHandlers => {\n    const bindings: ReactEventHandlers = {}\n    const { captureString } = this.config\n\n    Object.entries(this.bindings).forEach(([event, fns]) => {\n      const fnsArray = Array.isArray(fns) ? fns : [fns]\n      const key = (event + captureString) as ReactEventHandlerKey\n      bindings[key] = chainFns(...(fnsArray as Fn[]))\n    })\n\n    return bindings\n  }\n\n  public getBind = () => {\n    // If config.domTarget is set we add event listeners to it and return the clean function.\n    if (this.config.domTarget) {\n      const domTarget = this.getDomTarget()\n      domTarget && this.addDomTargetListeners(domTarget)\n      return this.clean\n    }\n\n    // If not, we return an object that contains gesture handlers mapped to react handler event keys.\n    return this.getBindings()\n  }\n}\n","import React from 'react'\nimport Controller from '../Controller'\nimport {\n  InternalConfig,\n  HookReturnType,\n  InternalHandlers,\n  RecognizerClasses,\n  GenericOptions,\n  NativeHandlersPartial,\n  ReactEventHandlerKey,\n  Fn,\n} from '../types'\n/**\n * @private\n *\n * Utility hook called by all gesture hooks and that will be responsible for the internals.\n *\n * @param {Partial<InternalHandlers>} handlers\n * @param {RecognizerClasses} classes\n * @param {InternalConfig} config\n * @param {NativeHandlersPartial} nativeHandlers - native handlers such as onClick, onMouseDown, etc.\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport default function useRecognizers<Config extends Partial<GenericOptions>>(\n  handlers: Partial<InternalHandlers>,\n  classes: RecognizerClasses,\n  config: InternalConfig,\n  nativeHandlers?: NativeHandlersPartial\n): (...args: any[]) => HookReturnType<Config> {\n  const controller = React.useRef<Controller>() // The gesture controller keeping track of all gesture states\n  const nativeRefs = React.useRef<NativeHandlersPartial>()\n\n  if (!controller.current) {\n    // We only initialize the gesture controller once\n    controller.current = new Controller()\n  }\n\n  // We reassign the config and handlers to the controller on every render.\n  controller.current!.config = config\n  controller.current!.handlers = handlers\n\n  /**\n   * We also assign nativeHandlers to a ref, otherwise it they won't be refreshed\n   * on the next render.\n   */\n  nativeRefs.current = nativeHandlers\n\n  /**\n   * When the component unmounts, we run the controller clean functions that will be responsible\n   * for removing listeners, clearing timeouts etc.\n   */\n  React.useEffect(() => controller.current!.clean, [])\n\n  /**\n   * The bind function will create gesture recognizers and return the right\n   * bind object depending on whether `domTarget` was specified in the config object.\n   */\n  const [bind] = React.useState(() => (...args: any[]) => {\n    controller.current!.resetBindings()\n    classes.forEach(RecognizerClass => {\n      const recognizer = new RecognizerClass(controller.current!, args)\n      recognizer.addBindings()\n    })\n\n    if (nativeRefs.current) {\n      // we also add event bindings for native handlers\n      Object.entries(nativeRefs.current).forEach(([eventName, fn]) => {\n        // we're cheating when it comes to event type :(\n        controller.current!.addBindings(eventName as ReactEventHandlerKey, fn as Fn)\n      })\n    }\n\n    return controller.current!.getBind() as HookReturnType<Config>\n  })\n\n  return bind\n}\n","import Controller from '../Controller'\nimport {\n  StateKey,\n  SharedGestureState,\n  Fn,\n  UseGestureEvent,\n  IngKey,\n  InternalConfig,\n  GestureState,\n  PartialGestureState,\n  Vector2,\n  FalseOrNumber,\n  FullGestureState,\n} from '../types'\nimport { getInitialState } from '../utils/state'\nimport { subV, addV, getIntentional, rubberbandIfOutOfBounds } from '../utils/math'\nimport { valueFn } from '../utils/utils'\n\n/**\n * @private\n * Recognizer abstract class.\n *\n * @protected\n * @abstract\n * @type {StateKey<T>} whether the Recognizer should deal with coordinates or distance / angle\n */\nexport default abstract class Recognizer<T extends StateKey> {\n  protected abstract ingKey: IngKey // dragging, scrolling, etc.\n\n  /**\n   * Creates an instance of a gesture recognizer.\n   * @param stateKey drag, move, pinch, etc.\n   * @param controller the controller attached to the gesture\n   * @param [args] the args that should be passed to the gesture handler\n   */\n  constructor(\n    protected readonly stateKey: T,\n    protected readonly controller: Controller,\n    protected readonly args: any[] = []\n  ) {}\n\n  // Returns the gesture config\n  protected get config(): NonNullable<InternalConfig[T]> {\n    return this.controller.config[this.stateKey]!\n  }\n\n  // Is the gesture enabled\n  protected get enabled(): boolean {\n    return this.controller.config.enabled && this.config.enabled\n  }\n\n  // Returns the controller state for a given gesture\n  protected get state(): GestureState<T> {\n    return this.controller.state[this.stateKey]\n  }\n\n  // Returns the gesture handler\n  protected get handler() {\n    return this.controller.handlers[this.stateKey]!\n  }\n\n  // Conveninence method to update the shared state\n  protected updateSharedState(sharedState: Partial<SharedGestureState> | null) {\n    Object.assign(this.controller.state.shared, sharedState)\n  }\n\n  // Conveninence method to update the gesture state\n  protected updateGestureState(gestureState: PartialGestureState<T> | null) {\n    Object.assign(this.state, gestureState)\n  }\n\n  // Convenience method to set a timeout for a given gesture\n  protected setTimeout = (callback: (...args: any[]) => void, ms: number = 140, ...args: any[]): void => {\n    this.controller.timeouts[this.stateKey] = window.setTimeout(callback, ms, ...args)\n  }\n\n  // Convenience method to clear a timeout for a given gesture\n  protected clearTimeout = () => {\n    clearTimeout(this.controller.timeouts[this.stateKey])\n  }\n\n  // Convenience method to add window listeners for a given gesture\n  protected addWindowListeners = (listeners: [string, Fn][]) => {\n    this.controller.addWindowListeners(this.stateKey, listeners)\n  }\n\n  // Convenience method to remove window listeners for a given gesture\n  protected removeWindowListeners = () => {\n    this.controller.removeWindowListeners(this.stateKey)\n  }\n\n  /**\n   * Utility function to get kinematics of the gesture.\n   *\n   * @abstract\n   * @values - values we want to calculate the kinematics from\n   * @event - the pointer event\n   * @returns - set of values including movement, velocity, velocities, distance and direction\n   */\n  protected abstract getKinematics(values: Vector2, event: UseGestureEvent): PartialGestureState<T>\n\n  protected abstract mapStateValues(state: GestureState<T>): PartialGestureState<T>\n\n  // Should return the bindings to be added for a given gesture\n  public abstract addBindings(): void\n\n  /**\n   * Returns a generic, common payload for all gestures from an event.\n   *\n   * @param {UseGestureEvent} event\n   * @param {boolean} [isStartEvent]\n   * @returns - the generic gesture payload\n   */\n  protected getGenericPayload(event: UseGestureEvent, isStartEvent?: boolean) {\n    const { timeStamp } = event\n    const { values, startTime } = this.state\n\n    return {\n      event,\n      timeStamp,\n      elapsedTime: isStartEvent ? 0 : timeStamp - startTime!,\n      args: this.args,\n      previous: values,\n    }\n  }\n  /**\n   * Returns the reinitialized start state for the gesture.\n   * Should be common to all gestures.\n   *\n   * @param {Vector2} values\n   * @param {UseGestureEvent} event\n   * @returns - the start state for the gesture\n   */\n  protected getStartGestureState = (values: Vector2, event: UseGestureEvent) => {\n    return {\n      ...getInitialState()[this.stateKey],\n      _active: true,\n      values,\n      initial: values,\n      offset: this.state.offset,\n      lastOffset: this.state.offset,\n      startTime: event.timeStamp,\n    }\n  }\n\n  /**\n   * Returns state properties depending on the movement and state.\n   *\n   * Should be overriden for custom behavior, doesn't do anything in the implementation\n   * below.\n   */\n  protected checkIntentionality(\n    _intentional: [FalseOrNumber, FalseOrNumber],\n    _movement: Vector2,\n    _state: PartialGestureState<T>\n  ): PartialGestureState<T> {\n    return { _intentional, _blocked: false } as PartialGestureState<T>\n  }\n\n  protected abstract getInternalMovement(values: Vector2, state: GestureState<T>): Vector2\n\n  /**\n   * Returns basic movement properties for the gesture based on the next values and current state.\n   */\n  protected getMovement(values: Vector2, state: GestureState<T> = this.state): PartialGestureState<T> {\n    const { initial, threshold, rubberband } = this.config\n\n    const [t0, t1] = threshold\n\n    const { _initial, _active, _intentional: intentional, lastOffset, movement: prevMovement } = state\n    let [i0, i1] = intentional\n\n    const [_m0, _m1] = this.getInternalMovement(values, state)\n\n    /**\n     * For both dimensions of the gesture, check its intentionality on each frame.\n     */\n    if (i0 === false) {\n      i0 = getIntentional(_m0, t0)\n    }\n    if (i1 === false) {\n      i1 = getIntentional(_m1, t1)\n    }\n\n    // Get gesture specific state properties based on intentionality and movement.\n    const intentionalityCheck = this.checkIntentionality([i0, i1], [_m0, _m1], state)\n\n    const { _intentional, _blocked } = intentionalityCheck\n    const [_i0, _i1] = _intentional!\n    const _movement = [_m0, _m1]\n\n    if (_i0 !== false && intentional[0] === false) _initial[0] = valueFn(initial)[0]\n    if (_i1 !== false && intentional[1] === false) _initial[1] = valueFn(initial)[1]\n\n    /**\n     * If the gesture has been blocked (from gesture specific checkIntentionality),\n     * stop right there.\n     */\n    if (_blocked) return { ...intentionalityCheck, _movement }\n\n    /**\n     * The movement sent to the handler has 0 in its dimensions when intentionality is false.\n     * It is calculated from the actual movement minus the threshold.\n     */\n    let movement = [\n      _i0 !== false ? _m0 - _i0 : valueFn(initial)[0],\n      _i1 !== false ? _m1 - _i1 : valueFn(initial)[1],\n    ] as Vector2\n    const offset = addV(movement, lastOffset)\n\n    /**\n     * Rubberband should be 0 when the gesture is no longer active, so that movement\n     * and offset can return within their bounds.\n     */\n    const _rubberband: Vector2 = _active ? rubberband : [0, 0]\n    movement = this.rubberband(addV(movement, _initial), _rubberband) // rubberbanded movement\n\n    return {\n      ...intentionalityCheck,\n      _initial,\n      _movement,\n      movement,\n      offset: this.rubberband(offset, _rubberband), // rubberbanded offset\n      delta: subV(movement, prevMovement),\n    } as PartialGestureState<T>\n  }\n\n  // Runs rubberband on a vector\n  protected rubberband = (vector: Vector2, rubberband: Vector2): Vector2 => {\n    const { bounds } = this.config\n\n    /**\n     * [x, y]: [rubberband(x, min, max), rubberband(y, min, max)]\n     */\n    return vector.map((v, i) => rubberbandIfOutOfBounds(v, bounds[i][0], bounds[i][1], rubberband[i])) as Vector2\n  }\n\n  // Cleans the gesture. Can be overriden by gestures.\n  protected clean() {\n    this.clearTimeout()\n    this.removeWindowListeners()\n  }\n\n  /**\n   * Fires the gesture handler\n   *\n   * @param {boolean} [forceFlag] - if true, then the handler will fire even if the gesture is not intentional\n   */\n  protected fireGestureHandler = (forceFlag?: boolean): FullGestureState<T> | null => {\n    /**\n     * If the gesture has been blocked (this can happen when the gesture has started in an unwanted direction),\n     * clean everything and don't do anything.\n     */\n    if (this.state._blocked) {\n      this.state._active = false\n      this.clean()\n      return null\n    }\n\n    // If the gesture has no intentional dimension, don't do fire the handler.\n    const [intentionalX, intentionalY] = this.state._intentional\n    if (!forceFlag && intentionalX === false && intentionalY === false) return null\n\n    const { _active, active } = this.state\n\n    this.state.active = _active\n    this.state.first = _active && !active // `first` is true when the gesture becomes active\n    this.state.last = !_active // `last` is true when the gesture becomes inactive\n\n    this.controller.state.shared[this.ingKey] = _active // Sets dragging, pinching, etc. to the gesture active state\n\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...this.mapStateValues(this.state), // Sets xy or da to the gesture state values\n    } as FullGestureState<T>\n\n    // @ts-ignore\n    const newMemo = this.handler(state)\n\n    // Sets memo to the returned value of the handler (unless it's not undefined)\n    this.state.memo = newMemo !== void 0 ? newMemo : this.state.memo\n\n    // Cleans the gesture when the gesture is no longer active.\n    if (!_active) this.clean()\n\n    return state\n  }\n}\n","import Recognizer from './Recognizer'\nimport { calculateAllKinematics, subV } from '../utils/math'\nimport { Vector2, UseGestureEvent, PartialGestureState, FalseOrNumber, GestureState, CoordinatesKey } from '../types'\n\n/**\n * @private\n * Abstract class for coordinates-based gesture recongizers\n * @abstract\n * @class CoordinatesRecognizer\n * @extends {Recognizer<T>}\n * @template T\n */\nexport default abstract class CoordinatesRecognizer<T extends CoordinatesKey> extends Recognizer<T> {\n  /**\n   * Returns the real movement (without taking intentionality into acount)\n   */\n  protected getInternalMovement(values: Vector2, state: GestureState<T>): Vector2 {\n    return subV(values, state.initial)\n  }\n\n  /**\n   * In coordinates-based gesture, this function will detect the first intentional axis,\n   * lock the gesture axis if lockDirection is specified in the config, block the gesture\n   * if the first intentional axis doesn't match the specified axis in config.\n   *\n   * @param {[FalseOrNumber, FalseOrNumber]} _intentional\n   * @param {Vector2} _movement\n   * @param {PartialGestureState<T>} state\n   */\n  protected checkIntentionality(\n    _intentional: [FalseOrNumber, FalseOrNumber],\n    _movement: Vector2,\n    state: PartialGestureState<T>\n  ): PartialGestureState<T> {\n    let [_ix, _iy] = _intentional\n    const intentionalMovement = _ix !== false || _iy !== false\n    let { axis } = state\n    let _blocked = false\n\n    // If the movement is intentional, we can compute axis.\n    if (intentionalMovement) {\n      const [absX, absY] = _movement.map(Math.abs)\n\n      const { axis: configAxis, lockDirection } = this.config\n\n      // We make sure we only set axis value if it hadn't been detected before.\n      axis = axis || (absX > absY ? 'x' : absX < absY ? 'y' : undefined)\n      if (!!configAxis || lockDirection) {\n        if (!!axis) {\n          // If the detected axis doesn't match the config axis we block the gesture\n          if (!!configAxis && axis !== configAxis) _blocked = true\n          else {\n            // Otherwise we prevent the gesture from updating the unwanted axis.\n            const lockedIndex = axis === 'x' ? 1 : 0\n            _intentional![lockedIndex] = false\n          }\n        } else {\n          // Until we've detected the axis, we prevent the hnadler from updating.\n          _intentional = [false, false]\n        }\n      }\n    }\n\n    return { _intentional, _blocked, axis } as PartialGestureState<T>\n  }\n\n  getKinematics(values: Vector2, event: UseGestureEvent): PartialGestureState<T> {\n    const { timeStamp } = this.state\n\n    const movementDetection = this.getMovement(values, this.state)\n    const { _blocked, delta, movement } = movementDetection\n\n    if (_blocked) return movementDetection\n\n    const delta_t = event.timeStamp - timeStamp!\n    const kinematics = calculateAllKinematics(movement!, delta!, delta_t)\n\n    return {\n      values,\n      delta,\n      ...movementDetection,\n      ...kinematics,\n    }\n  }\n\n  protected mapStateValues(state: GestureState<T>): PartialGestureState<T> {\n    return { xy: state.values, vxvy: state.velocities } as PartialGestureState<T>\n  }\n}\n","import { PointerEvent } from 'react'\nimport CoordinatesRecognizer from './CoordinatesRecognizer'\nimport Controller from '../Controller'\nimport { UseGestureEvent, Fn, IngKey } from '../types'\nimport { noop } from '../utils/utils'\nimport { getPointerEventValues, getGenericEventData, supportsTouchEvents } from '../utils/event'\nimport { calculateDistance } from '../utils/math'\n\nconst TAP_DISTANCE_THRESHOLD = 3\nconst SWIPE_MAX_ELAPSED_TIME = 220\n\nexport default class DragRecognizer extends CoordinatesRecognizer<'drag'> {\n  ingKey = 'dragging' as IngKey\n\n  constructor(controller: Controller, args: any[]) {\n    super('drag', controller, args)\n  }\n\n  private dragShouldStart = (event: UseGestureEvent) => {\n    const { touches } = getGenericEventData(event)\n    return this.enabled && touches < 2\n  }\n\n  private setPointers = (event: UseGestureEvent) => {\n    const { currentTarget, pointerId } = event as PointerEvent\n    // @ts-ignore\n    if (currentTarget) currentTarget.setPointerCapture(pointerId)\n    this.updateGestureState({ currentTarget, pointerId })\n  }\n\n  private removePointers = () => {\n    const { currentTarget, pointerId } = this.state\n    // @ts-ignore\n    if (currentTarget) currentTarget.releasePointerCapture(pointerId)\n  }\n\n  private setListeners = () => {\n    this.removeWindowListeners()\n    const dragListeners: [string, Fn][] = supportsTouchEvents()\n      ? [\n          ['touchmove', this.onDragChange],\n          ['touchend', this.onDragEnd],\n          ['touchcancel', this.onDragEnd],\n        ]\n      : [\n          ['mousemove', this.onDragChange],\n          ['mouseup', this.onDragEnd],\n        ]\n    this.addWindowListeners(dragListeners)\n  }\n\n  onDragStart = (event: UseGestureEvent): void => {\n    if (!this.dragShouldStart(event)) return\n    // if pointers events\n    if (this.controller.config.pointer) this.setPointers(event)\n    else this.setListeners()\n\n    if (this.config.delay > 0) {\n      this.state._delayedEvent = true\n      if (typeof event.persist === 'function') event.persist()\n      this.setTimeout(() => this.startDrag(event), this.config.delay)\n    } else {\n      this.startDrag(event)\n    }\n  }\n\n  startDrag(event: UseGestureEvent) {\n    const { values } = getPointerEventValues(event)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    const startState = {\n      ...this.getStartGestureState(values, event),\n      ...this.getGenericPayload(event, true),\n    }\n\n    this.updateGestureState({\n      ...startState,\n      ...this.getMovement(values, startState),\n      cancel: () => this.onCancel(),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onDragChange = (event: UseGestureEvent): void => {\n    const { canceled } = this.state\n    if (canceled) return\n\n    if (!this.state._active) {\n      if (this.state._delayedEvent) {\n        this.clearTimeout()\n        this.startDrag(event)\n      }\n      return\n    }\n\n    const genericEventData = getGenericEventData(event)\n\n    if (!genericEventData.down) {\n      this.onDragEnd(event)\n      return\n    }\n\n    this.updateSharedState(genericEventData)\n\n    const { values } = getPointerEventValues(event)\n    const kinematics = this.getKinematics(values, event)\n\n    let { _isTap } = this.state\n    if (_isTap && calculateDistance(kinematics._movement!) >= TAP_DISTANCE_THRESHOLD) _isTap = false\n\n    this.updateGestureState({\n      ...this.getGenericPayload(event),\n      ...kinematics,\n      _isTap,\n      cancel: () => this.onCancel(),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onDragEnd = (event: UseGestureEvent): void => {\n    this.state._active = false\n    this.updateSharedState({ down: false, buttons: 0, touches: 0 })\n\n    const {\n      _isTap,\n      values,\n      velocities: [vx, vy],\n      movement: [mx, my],\n      _intentional: [ix, iy],\n    } = this.state\n\n    const endState = {\n      ...this.getGenericPayload(event),\n      ...this.getMovement(values),\n    }\n\n    const { elapsedTime } = endState\n\n    const {\n      swipeVelocity: [svx, svy],\n      swipeDistance: [sx, sy],\n    } = this.config\n\n    const swipe: [number, number] = [0, 0]\n\n    if (elapsedTime < SWIPE_MAX_ELAPSED_TIME) {\n      if (ix !== false && Math.abs(vx) > svx && Math.abs(mx) > sx) swipe[0] = Math.sign(vx)\n      if (iy !== false && Math.abs(vy) > svy && Math.abs(my) > sy) swipe[1] = Math.sign(vy)\n    }\n\n    this.updateGestureState({\n      event,\n      ...endState,\n      tap: _isTap,\n      swipe,\n    })\n    this.fireGestureHandler(this.config.filterTaps && this.state._isTap)\n  }\n\n  clean = (): void => {\n    super.clean()\n    this.state._delayedEvent = false\n\n    if (this.controller.config.pointer) this.removePointers()\n  }\n\n  onCancel = (): void => {\n    this.updateGestureState({ canceled: true, cancel: noop })\n    this.state._active = false\n    this.updateSharedState({ down: false, buttons: 0, touches: 0 })\n    requestAnimationFrame(() => this.fireGestureHandler())\n  }\n\n  addBindings(): void {\n    if (this.controller.config.pointer) {\n      this.controller.addBindings('onPointerDown', this.onDragStart)\n      this.controller.addBindings('onPointerMove', this.onDragChange)\n      this.controller.addBindings(['onPointerUp', 'onPointerCancel'], this.onDragEnd)\n    } else {\n      if (supportsTouchEvents()) this.controller.addBindings('onTouchStart', this.onDragStart)\n      else this.controller.addBindings('onMouseDown', this.onDragStart)\n    }\n  }\n}\n","import { def, matchKeysFromObject } from './utils'\nimport {\n  Vector2,\n  GenericOptions,\n  InternalGenericOptions,\n  DragConfig,\n  Tuple,\n  GestureOptions,\n  DragOptions,\n  InternalDragOptions,\n  InternalGestureOptions,\n  CoordinatesConfig,\n  CoordinatesOptions,\n  InternalCoordinatesOptions,\n  DistanceAngleConfig,\n  InternalDistanceAngleOptions,\n} from '../types'\n\nconst DEFAULT_DRAG_DELAY = 180\nconst DEFAULT_RUBBERBAND = 0.15\n\nfunction getWindow() {\n  return typeof window !== 'undefined' ? window : undefined\n}\n\n/**\n * @private\n *\n * Returns the internal generic option object.\n *\n * @param {Partial<GenericOptions>} [config={}]\n * @returns {InternalGenericOptions}\n */\nexport function getInternalGenericOptions(config: Partial<GenericOptions> = {}): InternalGenericOptions {\n  const defaultOptions: GenericOptions = {\n    domTarget: undefined,\n    eventOptions: { passive: true, capture: false, pointer: false },\n    window: getWindow(),\n    enabled: true,\n  }\n\n  const { eventOptions: defaultEventOptions, window: defaultWindow, ...restDefault } = defaultOptions\n  const { eventOptions, window, ...restConfig } = config\n  const { passive, capture, pointer } = { ...defaultEventOptions, ...eventOptions }\n\n  return {\n    ...restDefault,\n    ...restConfig,\n    window: window || defaultWindow,\n    // passive is always true if there's no domTarget\n    eventOptions: { passive: !config.domTarget || !!passive, capture: !!capture },\n    captureString: capture ? 'Capture' : '',\n    pointer: !!pointer,\n  }\n}\n\nexport function getInternalGestureOptions(gestureConfig: Partial<GestureOptions>): InternalGestureOptions {\n  const defaultGestureOptions: GestureOptions = {\n    enabled: true,\n    initial: [0, 0],\n    threshold: undefined,\n    rubberband: 0,\n  }\n\n  const config = { ...defaultGestureOptions, ...gestureConfig }\n  let { threshold, rubberband, enabled, initial } = config\n\n  if (typeof rubberband === 'boolean') rubberband = rubberband ? DEFAULT_RUBBERBAND : 0\n  if (threshold === void 0) threshold = 0\n\n  return {\n    enabled,\n    initial,\n    threshold: def.array(threshold) as Vector2,\n    rubberband: def.array(rubberband) as Vector2,\n  }\n}\n\nexport function getInternalCoordinatesOptions(coordinatesConfig: CoordinatesConfig = {}): InternalCoordinatesOptions {\n  const defaultCoordinatesOptions: CoordinatesOptions = {\n    lockDirection: false,\n    axis: undefined,\n    bounds: undefined,\n  }\n\n  const { axis, lockDirection, bounds = {}, ...internalOptions } = coordinatesConfig\n\n  const boundsArray = [\n    [def.withDefault(bounds.left, -Infinity), def.withDefault(bounds.right, Infinity)],\n    [def.withDefault(bounds.top, -Infinity), def.withDefault(bounds.bottom, Infinity)],\n  ]\n\n  return {\n    ...getInternalGestureOptions(internalOptions),\n    ...defaultCoordinatesOptions,\n    ...matchKeysFromObject({ axis, lockDirection }, coordinatesConfig),\n    bounds: boundsArray as Tuple<Vector2>,\n  }\n}\n\nexport function getInternalDistanceAngleOptions(\n  distanceAngleConfig: DistanceAngleConfig = {}\n): InternalDistanceAngleOptions {\n  const { distanceBounds = {}, angleBounds = {}, ...internalOptions } = distanceAngleConfig\n\n  const boundsArray = [\n    [def.withDefault(distanceBounds.min, -Infinity), def.withDefault(distanceBounds.max, Infinity)],\n    [def.withDefault(angleBounds.min, -Infinity), def.withDefault(angleBounds.max, Infinity)],\n  ]\n\n  return {\n    ...getInternalGestureOptions(internalOptions),\n    bounds: boundsArray as Tuple<Vector2>,\n  }\n}\n\nexport function getInternalDragOptions(dragConfig: DragConfig = {}): InternalDragOptions {\n  const defaultDragOptions: DragOptions = {\n    filterTaps: false,\n    swipeVelocity: 0.5,\n    swipeDistance: 60,\n    delay: false,\n  }\n\n  let { enabled, threshold, bounds, rubberband, initial, ...dragOptions } = dragConfig\n  let { swipeVelocity, swipeDistance, delay, filterTaps, axis, lockDirection } = {\n    ...defaultDragOptions,\n    ...dragOptions,\n  }\n\n  if (threshold === void 0) {\n    threshold = Math.max(0, filterTaps ? 3 : 0, lockDirection || axis ? 1 : 0)\n  } else {\n    filterTaps = true\n  }\n\n  const internalCoordinatesOptions = getInternalCoordinatesOptions(\n    matchKeysFromObject({ enabled, threshold, bounds, rubberband, axis, lockDirection, initial }, dragConfig)\n  )\n\n  return {\n    ...internalCoordinatesOptions,\n    filterTaps: filterTaps || internalCoordinatesOptions.threshold[0] + internalCoordinatesOptions.threshold[1] > 0,\n    swipeVelocity: def.array(swipeVelocity) as Vector2,\n    swipeDistance: def.array(swipeDistance) as Vector2,\n    delay: typeof delay === 'number' ? delay : delay ? DEFAULT_DRAG_DELAY : 0,\n  }\n}\n","import useRecognizers from './useRecognizers'\nimport DragRecognizer from '../recognizers/DragRecognizer'\nimport { Handler, InternalConfig, HookReturnType, UseDragConfig } from '../types'\nimport { getInternalGenericOptions, getInternalDragOptions } from '../utils/config'\n\n/**\n * @public\n *\n * Drag hook.\n *\n * @param {Handler<'drag'>} handler - the function fired every time the drag gesture updates\n * @param {(Config | {})} [config={}] - the config object including generic options and drag options\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport function useDrag<Config extends UseDragConfig>(\n  handler: Handler<'drag'>,\n  config: Config | {} = {}\n): (...args: any[]) => HookReturnType<Config> {\n  const { domTarget, eventOptions, window, ...drag } = config as UseDragConfig\n\n  /**\n   * TODO: at the moment we recompute the config object at every render\n   * this could probably be optimized\n   */\n  const mergedConfig: InternalConfig = {\n    ...getInternalGenericOptions({\n      domTarget,\n      eventOptions,\n      window,\n    }),\n    drag: getInternalDragOptions(drag),\n  }\n\n  return useRecognizers<Config>({ drag: handler }, [DragRecognizer], mergedConfig)\n}\n","import Recognizer from './Recognizer'\nimport { calculateAllKinematics } from '../utils/math'\nimport { Vector2, UseGestureEvent, PartialGestureState, DistanceAngleKey, GestureState } from '../types'\n\n/**\n * @private\n * Abstract class for distance/angle-based gesture recongizers\n * @abstract\n * @class DistanceAngleRecognizer\n * @extends {Recognizer<T>}\n * @template T\n */\nexport default abstract class DistanceAngleRecognizer<T extends DistanceAngleKey> extends Recognizer<T> {\n  /**\n   * Returns the real movement (without taking intentionality into acount)\n   */\n  protected getInternalMovement([d, a]: [number, number?], state: GestureState<T>): Vector2 {\n    const { values: da, turns, initial } = state\n\n    // angle might not be defined when ctrl wheel is used for zoom only\n    // in that case we set it to the previous angle value\n    a = a !== void 0 ? a : da[1]\n\n    let delta_a = a - da[1]\n\n    /**\n     * The angle value might jump from 179deg to -179deg when we actually want to\n     * read 181deg to ensure continuity. To make that happen, we detect when the jump\n     * is supsiciously high (ie > 270deg) and increase the `turns` value\n     */\n    const newTurns = Math.abs(delta_a) > 270 ? turns + Math.sign(delta_a) : turns\n\n    // we update the angle difference to its corrected value\n\n    const movement_d = d - initial[0]\n    const movement_a = a - 360 * newTurns - initial[1]\n    return [movement_d, movement_a]\n  }\n\n  getKinematics(values: Vector2, event: UseGestureEvent): PartialGestureState<T> {\n    const { timeStamp, initial } = this.state\n\n    const movementDetection = this.getMovement(values, this.state)\n    const { delta, movement } = movementDetection\n\n    const turns = (values[1] - movement![1] - initial[1]) / 360\n\n    const delta_t = event.timeStamp - timeStamp!\n    const kinematics = calculateAllKinematics(movement!, delta!, delta_t)\n\n    return {\n      values,\n      delta,\n      turns,\n      ...movementDetection,\n      ...kinematics,\n    }\n  }\n\n  protected mapStateValues(state: GestureState<T>): PartialGestureState<T> {\n    return { da: state.values, vdva: state.velocities } as PartialGestureState<T>\n  }\n}\n","import { TouchEvent, WheelEvent } from 'react'\nimport DistanceAngleRecognizer from './DistanceAngleRecognizer'\nimport Controller from '../Controller'\nimport { UseGestureEvent, IngKey, Vector2, WebKitGestureEvent } from '../types'\nimport { noop } from '../utils/utils'\nimport {\n  getGenericEventData,\n  getTwoTouchesEventData,\n  getWheelEventValues,\n  gestureEventSupported,\n  getWebkitGestureEventValues,\n} from '../utils/event'\n\nexport default class PinchRecognizer extends DistanceAngleRecognizer<'pinch'> {\n  ingKey = 'pinching' as IngKey\n\n  constructor(controller: Controller, args: any[]) {\n    super('pinch', controller, args)\n  }\n\n  private pinchShouldStart = (event: UseGestureEvent) => {\n    const { touches } = getGenericEventData(event)\n    return this.enabled && touches === 2\n  }\n\n  onPinchStart = (event: UseGestureEvent<TouchEvent>) => {\n    if (!this.pinchShouldStart(event)) return\n\n    const { values, origin } = getTwoTouchesEventData(event)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    const startState = {\n      ...this.getStartGestureState(values, event),\n      ...this.getGenericPayload(event, true),\n    }\n\n    this.updateGestureState({\n      ...startState,\n      ...this.getMovement(values, startState),\n      origin,\n      cancel: () => this.onCancel(),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onPinchChange = (event: UseGestureEvent<TouchEvent>): void => {\n    const { canceled, timeStamp, _active } = this.state\n    if (canceled || !_active) return\n    const genericEventData = getGenericEventData(event)\n    if (genericEventData.touches !== 2 || event.timeStamp === timeStamp) return\n\n    this.updateSharedState(genericEventData)\n\n    const { values, origin } = getTwoTouchesEventData(event)\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      ...this.getGenericPayload(event),\n      ...kinematics,\n      origin,\n      cancel: () => this.onCancel(),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onPinchEnd = (event: UseGestureEvent): void => {\n    this.state._active = false\n    this.updateSharedState({ down: false, touches: 0 })\n\n    this.updateGestureState({\n      event,\n      ...this.getGenericPayload(event),\n      ...this.getMovement(this.state.values),\n    })\n    this.fireGestureHandler()\n  }\n\n  onCancel = (): void => {\n    this.state._active = false\n    this.updateGestureState({ canceled: true, cancel: noop })\n    this.updateSharedState({ down: false, touches: 0 })\n\n    requestAnimationFrame(() => this.fireGestureHandler())\n  }\n  /**\n   * PINCH WITH WEBKIT GESTURES\n   */\n\n  onGestureStart = (event: WebKitGestureEvent): void => {\n    if (!this.enabled) return\n    event.preventDefault()\n\n    const { values } = getWebkitGestureEventValues(event)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    const startState = {\n      ...this.getStartGestureState(values, event),\n      ...this.getGenericPayload(event, true),\n    }\n\n    this.updateGestureState({\n      ...startState,\n      ...this.getMovement(values, startState),\n      cancel: () => this.onCancel(),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onGestureChange = (event: WebKitGestureEvent): void => {\n    const { canceled, _active } = this.state\n    if (canceled || !_active) return\n\n    event.preventDefault()\n\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    const { values } = getWebkitGestureEventValues(event)\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      ...this.getGenericPayload(event),\n      ...kinematics,\n      cancel: () => this.onCancel(),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onGestureEnd = (event: WebKitGestureEvent): void => {\n    event.preventDefault()\n    this.state._active = false\n    this.updateSharedState({ down: false, touches: 0 })\n\n    this.updateGestureState({\n      event,\n      ...this.getGenericPayload(event),\n      ...this.getMovement(this.state.values),\n    })\n    this.fireGestureHandler()\n  }\n\n  updateTouchData = (event: UseGestureEvent<TouchEvent>): void => {\n    if (!this.enabled || event.touches.length !== 2) return\n    const { origin } = getTwoTouchesEventData(event)\n    this.state.origin = origin\n  }\n\n  /**\n   * PINCH WITH WHEEL\n   */\n  private wheelShouldRun = (event: UseGestureEvent<WheelEvent>) => {\n    return this.enabled && event.ctrlKey\n  }\n\n  private getWheelValuesFromEvent = (event: UseGestureEvent<WheelEvent>) => {\n    const {\n      values: [, delta_d],\n    } = getWheelEventValues(event)\n    const {\n      values: [prev_d, prev_a],\n    } = this.state\n    const d = prev_d - delta_d\n    const a = prev_a !== void 0 ? prev_a : 0\n\n    return {\n      values: [d, a] as Vector2,\n      origin: [event.clientX, event.clientY] as Vector2,\n      delta: [0, delta_d] as Vector2,\n    }\n  }\n\n  onWheel = (event: UseGestureEvent<WheelEvent>): void => {\n    if (!this.wheelShouldRun(event)) return\n    this.clearTimeout()\n    this.setTimeout(this.onWheelEnd)\n\n    if (!this.state._active) this.onWheelStart(event)\n    else this.onWheelChange(event)\n  }\n\n  onWheelStart = (event: UseGestureEvent<WheelEvent>): void => {\n    const { values, delta, origin } = this.getWheelValuesFromEvent(event)\n\n    if (!this.controller.config.eventOptions.passive) {\n      event.preventDefault()\n    } else if (process.env.NODE_ENV === 'development') {\n      console.warn(\n        'To support zoom on trackpads, try using the `domTarget` option and `config.event.passive` set to `false`. This message will only appear in development mode.'\n      )\n    }\n\n    this.updateSharedState(getGenericEventData(event))\n\n    const startState = {\n      ...this.getStartGestureState(values, event),\n      ...this.getGenericPayload(event, true),\n      initial: this.state.values,\n    }\n\n    this.updateGestureState({\n      ...startState,\n      ...this.getMovement(values, startState),\n      offset: values,\n      delta,\n      origin,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onWheelChange = (event: UseGestureEvent<WheelEvent>): void => {\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    const { values, origin, delta } = this.getWheelValuesFromEvent(event)\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      ...this.getGenericPayload(event),\n      ...kinematics,\n      origin,\n      delta,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onWheelEnd = (): void => {\n    this.state._active = false\n    this.updateGestureState(this.getMovement(this.state.values))\n    this.fireGestureHandler()\n  }\n\n  addBindings(): void {\n    if (gestureEventSupported()) {\n      this.controller.addBindings('onGestureStart', this.onGestureStart)\n      this.controller.addBindings('onGestureChange', this.onGestureChange)\n      this.controller.addBindings(['onGestureEnd', 'onTouchCancel'], this.onGestureEnd)\n      this.controller.addBindings(['onTouchStart', 'onTouchMove'], this.updateTouchData)\n    } else {\n      this.controller.addBindings('onTouchStart', this.onPinchStart)\n      this.controller.addBindings('onTouchMove', this.onPinchChange)\n      this.controller.addBindings(['onTouchEnd', 'onTouchCancel'], this.onPinchEnd)\n\n      this.controller.addBindings('onWheel', this.onWheel)\n    }\n  }\n}\n","import useRecognizers from './useRecognizers'\nimport PinchRecognizer from '../recognizers/PinchRecognizer'\nimport { Handler, InternalConfig, HookReturnType, UsePinchConfig } from '../types'\nimport { getInternalGenericOptions, getInternalDistanceAngleOptions } from '../utils/config'\n\n/**\n * @public\n *\n * Pinch hook.\n *\n * @param {Handler<'pinch'>} handler - the function fired every time the pinch gesture updates\n * @param {(Config | {})} [config={}] - the config object including generic options and pinch options\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport function usePinch<Config extends UsePinchConfig>(\n  handler: Handler<'pinch'>,\n  config: Config | {} = {}\n): (...args: any[]) => HookReturnType<Config> {\n  const { domTarget, eventOptions, window, ...pinch } = config as UsePinchConfig\n\n  /**\n   * TODO: at the moment we recompute the config object at every render\n   * this could probably be optimized\n   */\n  const mergedConfig: InternalConfig = {\n    ...getInternalGenericOptions({\n      domTarget,\n      eventOptions,\n      window,\n    }),\n    pinch: getInternalDistanceAngleOptions(pinch),\n  }\n\n  return useRecognizers<Config>({ pinch: handler }, [PinchRecognizer], mergedConfig)\n}\n","import { WheelEvent } from 'react'\nimport CoordinatesRecognizer from './CoordinatesRecognizer'\nimport Controller from '../Controller'\nimport { UseGestureEvent, IngKey } from '../types'\nimport { getWheelEventValues, getGenericEventData } from '../utils/event'\nimport { addV, calculateDistance, calculateDirection } from '../utils/math'\n\nexport default class WheelRecognizer extends CoordinatesRecognizer<'wheel'> {\n  ingKey = 'wheeling' as IngKey\n\n  constructor(controller: Controller, args: any[]) {\n    super('wheel', controller, args)\n  }\n\n  private wheelShouldRun = (event: UseGestureEvent<WheelEvent>) => {\n    if (event.ctrlKey && 'pinch' in this.controller.handlers) return false\n    return this.enabled\n  }\n\n  private getValuesFromEvent = (event: UseGestureEvent<WheelEvent>) => {\n    const { values: prevValues } = this.state\n    const { values } = getWheelEventValues(event)\n    return { values: addV(values, prevValues) }\n  }\n\n  onWheel = (event: UseGestureEvent<WheelEvent>): void => {\n    if (!this.wheelShouldRun(event)) return\n    this.clearTimeout()\n    this.setTimeout(this.onWheelEnd)\n\n    if (!this.state._active) this.onWheelStart(event)\n    else this.onWheelChange(event)\n  }\n\n  onWheelStart = (event: UseGestureEvent<WheelEvent>): void => {\n    const { values } = this.getValuesFromEvent(event)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    const startState = {\n      ...this.getStartGestureState(values, event),\n      ...this.getGenericPayload(event, true),\n      initial: this.state.values,\n    }\n\n    const movementDetection = this.getMovement(values, startState)\n    const delta = movementDetection.delta!\n\n    this.updateGestureState({\n      ...startState,\n      ...movementDetection,\n      distance: calculateDistance(delta),\n      direction: calculateDirection(delta),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onWheelChange = (event: UseGestureEvent<WheelEvent>): void => {\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    const { values } = this.getValuesFromEvent(event)\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      ...this.getGenericPayload(event),\n      ...kinematics,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onWheelEnd = (): void => {\n    this.state._active = false\n    this.updateGestureState({ ...this.getMovement(this.state.values), velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  addBindings(): void {\n    this.controller.addBindings('onWheel', this.onWheel)\n  }\n}\n","import useRecognizers from './useRecognizers'\nimport WheelRecognizer from '../recognizers/WheelRecognizer'\nimport { Handler, InternalConfig, HookReturnType, UseWheelConfig } from '../types'\nimport { getInternalGenericOptions, getInternalCoordinatesOptions } from '../utils/config'\n\n/**\n * @public\n *\n * Wheel hook.\n *\n * @param {Handler<'wheel'>} handler - the function fired every time the wheel gesture updates\n * @param {(Config | {})} [config={}] - the config object including generic options and wheel options\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport function useWheel<Config extends UseWheelConfig>(\n  handler: Handler<'wheel'>,\n  config: Config | {} = {}\n): (...args: any[]) => HookReturnType<Config> {\n  const { domTarget, eventOptions, window, ...wheel } = config as UseWheelConfig\n\n  /**\n   * TODO: at the moment we recompute the config object at every render\n   * this could probably be optimized\n   */\n  const mergedConfig: InternalConfig = {\n    ...getInternalGenericOptions({\n      domTarget,\n      eventOptions,\n      window,\n    }),\n    wheel: getInternalCoordinatesOptions(wheel),\n  }\n\n  return useRecognizers<Config>({ wheel: handler }, [WheelRecognizer], mergedConfig)\n}\n","import {} from 'react'\nimport CoordinatesRecognizer from './CoordinatesRecognizer'\nimport Controller from '../Controller'\nimport { UseGestureEvent, IngKey } from '../types'\nimport { getGenericEventData, getPointerEventValues } from '../utils/event'\n\nexport default class MoveRecognizer extends CoordinatesRecognizer<'move'> {\n  ingKey = 'moving' as IngKey\n\n  constructor(controller: Controller, args: any[]) {\n    super('move', controller, args)\n  }\n\n  private moveShouldRun = () => {\n    return this.enabled\n  }\n\n  onMove = (event: UseGestureEvent): void => {\n    if (!this.moveShouldRun()) return\n    this.clearTimeout()\n    this.setTimeout(this.onMoveEnd)\n\n    if (!this.state._active) this.onMoveStart(event)\n    else this.onMoveChange(event)\n  }\n\n  onMoveStart = (event: UseGestureEvent): void => {\n    const { values } = getPointerEventValues(event)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    const startState = {\n      ...this.getStartGestureState(values, event),\n      ...this.getGenericPayload(event, true),\n    }\n\n    this.updateGestureState({\n      ...startState,\n      ...this.getMovement(values, startState),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onMoveChange = (event: UseGestureEvent): void => {\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    const { values } = getPointerEventValues(event)\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      ...this.getGenericPayload(event),\n      ...kinematics,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onMoveEnd = (): void => {\n    this.state._active = false\n\n    this.updateGestureState({ ...this.getMovement(this.state.values), velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  onPointerEnter = (event: UseGestureEvent): void => {\n    this.controller.state.shared.hovering = true\n    if (!this.controller.config.enabled) return\n    if ('move' in this.controller.handlers) this.onMoveStart(event)\n\n    if (!this.controller.config.hover!.enabled) return\n\n    const { values } = getPointerEventValues(event)\n\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...this.getGenericPayload(event, true),\n      values,\n      active: true,\n      hovering: true,\n    }\n\n    this.controller.handlers.hover!({ ...state, ...this.mapStateValues(state) })\n  }\n\n  onPointerLeave = (event: UseGestureEvent): void => {\n    this.controller.state.shared.hovering = false\n    if ('move' in this.controller.handlers) this.onMoveEnd()\n\n    if (!this.controller.config.hover!.enabled) return\n\n    const { values } = getPointerEventValues(event)\n\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...this.getGenericPayload(event),\n      values,\n      active: false,\n    }\n\n    this.controller.handlers.hover!({ ...state, ...this.mapStateValues(state) })\n  }\n\n  addBindings(): void {\n    if (this.controller.config.pointer) {\n      if ('move' in this.controller.handlers) {\n        this.controller.addBindings('onPointerMove', this.onMove)\n      }\n      if ('hover' in this.controller.handlers) {\n        this.controller.addBindings('onPointerEnter', this.onPointerEnter)\n        this.controller.addBindings('onPointerLeave', this.onPointerLeave)\n      }\n    } else {\n      if ('move' in this.controller.handlers) {\n        this.controller.addBindings('onMouseMove', this.onMove)\n      }\n      if ('hover' in this.controller.handlers) {\n        this.controller.addBindings('onMouseEnter', this.onPointerEnter)\n        this.controller.addBindings('onMouseLeave', this.onPointerLeave)\n      }\n    }\n  }\n}\n","import useRecognizers from './useRecognizers'\nimport MoveRecognizer from '../recognizers/MoveRecognizer'\nimport { Handler, InternalConfig, HookReturnType, UseMoveConfig } from '../types'\nimport { getInternalGenericOptions, getInternalCoordinatesOptions } from '../utils/config'\n\n/**\n * @public\n *\n * Move hook.\n *\n * @param {Handler<'move'>} handler - the function fired every time the move gesture updates\n * @param {(Config | {})} [config={}] - the config object including generic options and move options\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport function useMove<Config extends UseMoveConfig>(\n  handler: Handler<'move'>,\n  config: Config | {} = {}\n): (...args: any[]) => HookReturnType<Config> {\n  const { domTarget, eventOptions, window, ...move } = config as UseMoveConfig\n\n  /**\n   * TODO: at the moment we recompute the config object at every render\n   * this could probably be optimized\n   */\n  const mergedConfig: InternalConfig = {\n    ...getInternalGenericOptions({\n      domTarget,\n      eventOptions,\n      window,\n    }),\n    move: getInternalCoordinatesOptions(move),\n  }\n\n  return useRecognizers<Config>({ move: handler }, [MoveRecognizer], mergedConfig)\n}\n","import useRecognizers from './useRecognizers'\nimport MoveRecognizer from '../recognizers/MoveRecognizer'\nimport { Handler, InternalConfig, HookReturnType, UseHoverConfig } from '../types'\nimport { getInternalGenericOptions } from '../utils/config'\n\n/**\n * @public\n *\n * Hover hook.\n *\n * @param {Handler<'hover'>} handler - the function fired every time the hover gesture updates\n * @param {(Config | {})} [config={}] - the config object including generic options and hover options\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport function useHover<Config extends UseHoverConfig>(\n  handler: Handler<'hover'>,\n  config: Config | {} = {}\n): (...args: any[]) => HookReturnType<Config> {\n  const { domTarget, eventOptions, window, ...hover } = config as UseHoverConfig\n\n  /**\n   * TODO: at the moment we recompute the config object at every render\n   * this could probably be optimized\n   */\n  const mergedConfig: InternalConfig = {\n    ...getInternalGenericOptions({\n      domTarget,\n      eventOptions,\n      window,\n    }),\n    hover: { enabled: true, ...hover },\n  }\n\n  return useRecognizers<Config>({ hover: handler }, [MoveRecognizer], mergedConfig)\n}\n","import {} from 'react'\nimport CoordinatesRecognizer from './CoordinatesRecognizer'\nimport Controller from '../Controller'\nimport { UseGestureEvent, IngKey } from '../types'\nimport { getGenericEventData, getScrollEventValues } from '../utils/event'\nimport { calculateDistance, calculateDirection } from '../utils/math'\n\nexport default class ScrollRecognizer extends CoordinatesRecognizer<'scroll'> {\n  ingKey = 'scrolling' as IngKey\n\n  constructor(controller: Controller, args: any[]) {\n    super('scroll', controller, args)\n  }\n\n  private scrollShouldRun = () => {\n    return this.enabled\n  }\n\n  onScroll = (event: UseGestureEvent): void => {\n    if (!this.scrollShouldRun()) return\n    this.clearTimeout()\n    this.setTimeout(this.onScrollEnd)\n\n    if (!this.state._active) this.onScrollStart(event)\n    else this.onScrollChange(event)\n  }\n\n  onScrollStart = (event: UseGestureEvent): void => {\n    const { values } = getScrollEventValues(event)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    const startState = {\n      ...this.getStartGestureState(values, event),\n      ...this.getGenericPayload(event, true),\n      initial: this.state.values,\n    }\n\n    const movementDetection = this.getMovement(values, startState)\n    const delta = movementDetection.delta!\n\n    this.updateGestureState({\n      ...startState,\n      ...movementDetection,\n      distance: calculateDistance(delta),\n      direction: calculateDirection(delta),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onScrollChange = (event: UseGestureEvent): void => {\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    const { values } = getScrollEventValues(event)\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      ...this.getGenericPayload(event),\n      ...kinematics,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onScrollEnd = (): void => {\n    this.state._active = false\n    this.updateGestureState({ ...this.getMovement(this.state.values), velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  addBindings(): void {\n    this.controller.addBindings('onScroll', this.onScroll)\n  }\n}\n","import useRecognizers from './useRecognizers'\nimport ScrollRecognizer from '../recognizers/ScrollRecognizer'\nimport { Handler, InternalConfig, HookReturnType, UseScrollConfig } from '../types'\nimport { getInternalGenericOptions, getInternalCoordinatesOptions } from '../utils/config'\n\n/**\n * @public\n *\n * Scroll hook.\n *\n * @param {Handler<'scroll'>} handler - the function fired every time the scroll gesture updates\n * @param {(Config | {})} [config={}] - the config object including generic options and scroll options\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport function useScroll<Config extends UseScrollConfig>(\n  handler: Handler<'scroll'>,\n  config: Config | {} = {}\n): (...args: any[]) => HookReturnType<Config> {\n  const { domTarget, eventOptions, window, ...scroll } = config as UseScrollConfig\n\n  /**\n   * TODO: at the moment we recompute the config object at every render\n   * this could probably be optimized\n   */\n  const mergedConfig: InternalConfig = {\n    ...getInternalGenericOptions({\n      domTarget,\n      eventOptions,\n      window,\n    }),\n    scroll: getInternalCoordinatesOptions(scroll),\n  }\n\n  return useRecognizers<Config>({ scroll: handler }, [ScrollRecognizer], mergedConfig)\n}\n","import React from 'react'\nimport useRecognizers from './useRecognizers'\nimport DragRecognizer from '../recognizers/DragRecognizer'\nimport WheelRecognizer from '../recognizers/WheelRecognizer'\nimport MoveRecognizer from '../recognizers/MoveRecognizer'\nimport PinchRecognizer from '../recognizers/PinchRecognizer'\nimport ScrollRecognizer from '../recognizers/ScrollRecognizer'\nimport {\n  getInternalGenericOptions,\n  getInternalDragOptions,\n  getInternalCoordinatesOptions,\n  getInternalDistanceAngleOptions,\n} from '../utils/config'\nimport {\n  InternalConfig,\n  HandlerKey,\n  UserHandlersPartial,\n  InternalHandlers,\n  UserHandlers,\n  RecognizerClasses,\n  UseGestureConfig,\n  HookReturnType,\n} from '../types'\n\n/**\n * @public\n *\n * The most complete gesture hook, allowing support for multiple gestures.\n *\n * @param {UserHandlersPartial} handlers - an object with on[Gesture] keys containg gesture handlers\n * @param {UseGestureConfig} [config={}] - the full config object\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport function useGesture<Config extends UseGestureConfig>(\n  handlers: UserHandlersPartial,\n  config: UseGestureConfig = {}\n): (...args: any[]) => HookReturnType<Config> {\n  /**\n   * If handlers contains {onDragStart, onDrag, onDragEnd, onMoveStart, onMove}\n   * actions will include 'onDrag' and 'onMove.\n   */\n  const [actions] = React.useState(() => new Set(Object.keys(handlers).map(k => k.replace(/End|Start/, ''))))\n\n  /**\n   * Here we compute the derived internal config based on the provided config object.\n   * We decompose the config into its generic and gesture options and compute each.\n   * TODO: this is currently done on every render!\n   */\n  const { drag, wheel, move, scroll, pinch, hover, ...restConfig } = config\n\n  const mergedConfig: InternalConfig = getInternalGenericOptions(restConfig)\n\n  const classes: RecognizerClasses = []\n  const internalHandlers: Partial<InternalHandlers> = {}\n\n  // will hold reference to native handlers such as onClick, onMouseDown, etc.\n  const _nativeHandlers = { ...handlers }\n\n  if (actions.has('onDrag')) {\n    classes.push(DragRecognizer)\n    internalHandlers.drag = includeStartEndHandlers(handlers, 'onDrag', _nativeHandlers)\n    mergedConfig.drag = getInternalDragOptions(drag)\n  }\n  if (actions.has('onWheel')) {\n    classes.push(WheelRecognizer)\n    internalHandlers.wheel = includeStartEndHandlers(handlers, 'onWheel', _nativeHandlers)\n    mergedConfig.wheel = getInternalCoordinatesOptions(wheel)\n  }\n  if (actions.has('onScroll')) {\n    classes.push(ScrollRecognizer)\n    internalHandlers.scroll = includeStartEndHandlers(handlers, 'onScroll', _nativeHandlers)\n    mergedConfig.scroll = getInternalCoordinatesOptions(scroll)\n  }\n  if (actions.has('onMove')) {\n    classes.push(MoveRecognizer)\n    internalHandlers.move = includeStartEndHandlers(handlers, 'onMove', _nativeHandlers)\n    mergedConfig.move = getInternalCoordinatesOptions(move)\n  }\n  if (actions.has('onPinch')) {\n    classes.push(PinchRecognizer)\n    internalHandlers.pinch = includeStartEndHandlers(handlers, 'onPinch', _nativeHandlers)\n    mergedConfig.pinch = getInternalDistanceAngleOptions(pinch)\n  }\n  if (actions.has('onHover')) {\n    if (!actions.has('onMove')) classes.push(MoveRecognizer)\n    internalHandlers.hover = handlers.onHover\n    mergedConfig.hover = { enabled: true, ...hover }\n    delete _nativeHandlers.onHover\n  }\n\n  return useRecognizers<Config>(internalHandlers, classes, mergedConfig, _nativeHandlers)\n}\n/**\n * @private\n *\n * This utility function will integrate start and end handlers into the regular\n * handler function by using first and last conditions.\n *\n * @param {UserHandlersPartial} handlers - the handlers function object\n * @param {HandlerKey} handlerKey - the key for which to integrate start and end handlers\n * @returns\n */\nfunction includeStartEndHandlers(\n  handlers: UserHandlersPartial,\n  handlerKey: HandlerKey,\n  _nativeHandlers: UserHandlersPartial\n) {\n  const startKey = (handlerKey + 'Start') as keyof UserHandlers\n  const endKey = (handlerKey + 'End') as keyof UserHandlers\n\n  delete _nativeHandlers[handlerKey]\n  delete _nativeHandlers[startKey]\n  delete _nativeHandlers[endKey]\n\n  const fn = (state: any) => {\n    let memo: any = undefined\n    if (state.first && startKey in handlers) handlers[startKey]!(state)\n    if (handlerKey in handlers) memo = handlers[handlerKey]!(state)\n    if (state.last && endKey in handlers) handlers[endKey]!(state)\n    return memo\n  }\n  return fn\n}\n"],"names":["addV","v1","v2","map","v","i","subV","calculateVelocity","delta","delta_t","len","Math","hypot","calculateVelocities","Array","length","fill","calculateDistance","movement","calculateDirection","calculateAllKinematics","velocities","velocity","distance","direction","getIntentional","threshold","abs","sign","minMax","value","min","max","rubberband2","constant","pow","rubberband","dimension","Infinity","rubberbandIfOutOfBounds","position","noop","chainFns","fns","args","forEach","fn","def","array","isArray","withDefault","defaultIfUndefined","matchKeysFromObject","obj","matchingObject","o","Object","entries","key","valueFn","getInitialState","initialCommon","_active","_blocked","_intentional","_movement","_initial","event","undefined","values","offset","lastOffset","initial","previous","first","last","active","timeStamp","startTime","elapsedTime","cancel","canceled","memo","initialCoordinates","axis","xy","vxvy","initialDistanceAngle","da","vdva","origin","turns","shared","hovering","scrolling","wheeling","dragging","moving","pinching","touches","buttons","down","shiftKey","altKey","metaKey","ctrlKey","drag","_isTap","_delayedEvent","tap","swipe","pinch","wheel","move","scroll","isBrowser","window","supportsTouchEvents","ontouchstart","setListeners","add","el","listeners","options","action","eventName","gestureEventSupported","GestureEvent","e","addListeners","removeListeners","getModifierKeys","getTouchEvents","changedTouches","getGenericEventData","touchEvents","getScrollEventValues","currentTarget","scrollX","scrollY","scrollLeft","scrollTop","getWheelEventValues","deltaX","deltaY","getPointerEventValues","clientX","clientY","WEBKIT_DISTANCE_SCALE_FACTOR","getWebkitGestureEventValues","scale","rotation","getTwoTouchesEventData","dx","dy","atan2","PI","Controller","resetBindings","timeouts","clearTimeout","keys","windowListeners","stateKey","removeWindowListeners","bindings","domTarget","getDomTarget","domListeners","config","eventOptions","current","target","push","substr","toLowerCase","eventNames","eventNamesArray","captureString","fnsArray","addDomTargetListeners","clean","getBindings","useRecognizers","handlers","classes","nativeHandlers","controller","React","useRef","nativeRefs","useEffect","useState","RecognizerClass","recognizer","addBindings","getBind","bind","Recognizer","callback","ms","setTimeout","addWindowListeners","state","vector","bounds","forceFlag","intentionalX","intentionalY","ingKey","mapStateValues","newMemo","handler","updateSharedState","sharedState","assign","updateGestureState","gestureState","getGenericPayload","isStartEvent","checkIntentionality","_state","getMovement","t0","t1","intentional","prevMovement","i0","i1","getInternalMovement","_m0","_m1","intentionalityCheck","_i0","_i1","_rubberband","enabled","CoordinatesRecognizer","_ix","_iy","intentionalMovement","absX","absY","configAxis","lockDirection","lockedIndex","getKinematics","movementDetection","kinematics","TAP_DISTANCE_THRESHOLD","SWIPE_MAX_ELAPSED_TIME","DragRecognizer","pointerId","setPointerCapture","releasePointerCapture","dragListeners","onDragChange","onDragEnd","dragShouldStart","pointer","setPointers","delay","persist","startDrag","genericEventData","onCancel","fireGestureHandler","vx","vy","mx","my","ix","iy","endState","swipeVelocity","svx","svy","swipeDistance","sx","sy","filterTaps","removePointers","requestAnimationFrame","startState","getStartGestureState","onDragStart","DEFAULT_DRAG_DELAY","DEFAULT_RUBBERBAND","getWindow","getInternalGenericOptions","defaultOptions","passive","capture","defaultEventOptions","defaultWindow","restDefault","restConfig","getInternalGestureOptions","gestureConfig","defaultGestureOptions","getInternalCoordinatesOptions","coordinatesConfig","defaultCoordinatesOptions","internalOptions","boundsArray","left","right","top","bottom","getInternalDistanceAngleOptions","distanceAngleConfig","distanceBounds","angleBounds","getInternalDragOptions","dragConfig","defaultDragOptions","dragOptions","internalCoordinatesOptions","useDrag","mergedConfig","DistanceAngleRecognizer","d","a","delta_a","newTurns","movement_d","movement_a","PinchRecognizer","pinchShouldStart","preventDefault","delta_d","prev_d","prev_a","wheelShouldRun","onWheelEnd","onWheelStart","onWheelChange","getWheelValuesFromEvent","console","warn","onGestureStart","onGestureChange","onGestureEnd","updateTouchData","onPinchStart","onPinchChange","onPinchEnd","onWheel","usePinch","WheelRecognizer","prevValues","getValuesFromEvent","useWheel","MoveRecognizer","moveShouldRun","onMoveEnd","onMoveStart","onMoveChange","hover","onMove","onPointerEnter","onPointerLeave","useMove","useHover","ScrollRecognizer","scrollShouldRun","onScrollEnd","onScrollStart","onScrollChange","onScroll","useScroll","useGesture","Set","k","replace","actions","internalHandlers","_nativeHandlers","has","includeStartEndHandlers","onHover","handlerKey","startKey","endKey"],"mappings":"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"}